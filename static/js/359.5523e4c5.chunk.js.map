{"version":3,"file":"static/js/359.5523e4c5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ClientName/ClientName.module.css?1cb8","components/ClientName/ClientName.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"search\":\"Filter_search__G+v4u\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilterAction } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\nimport search from '../../images/search.png'\n\nexport  const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filter.filter);\n\n  const handleFilterChange = (e) => {\n    dispatch(updateFilterAction(e.target.value));\n  };\n\n  return (\n    <div className={css.container} >\n      <p className={css.label}>Find contacts by name</p>\n      <input className={css.input} name=\"filter\" value={filter} onChange={handleFilterChange} />\n      <img className={css.search} src={search} alt=\"\" />\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"item\":\"ContactsList_item__6gc1x\",\"contactInfo\":\"ContactsList_contactInfo__0bGvd\",\"contactName\":\"ContactsList_contactName__1c30k\",\"contactNumber\":\"ContactsList_contactNumber__umGYT\",\"btn\":\"ContactsList_btn__GccuV\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/contacts/contactsSlice';\nimport { useEffect } from 'react';\nimport css from './ContactsList.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const filter = useSelector(state => state.filter.filter.toLowerCase());\n\n  const contacts = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await dispatch(fetchContacts());\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n  \n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <ul className={css.list}>\n          {contacts.map(contact => (\n            <li className={css.item} key={contact.id}>\n              <div className={css.contactInfo}>\n                <span className={css.contactName}>{contact.name}:</span>\n                <span className={css.contactNumber}>{contact.number}</span>\n              </div>\n              <button\n                className={css.btn}\n                onClick={() => dispatch(deleteContact(contact.id))}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Deleting...' : 'Delete'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ClientName_container__n-Y+Q\",\"form\":\"ClientName_form__qSTE+\",\"label\":\"ClientName_label__hF4wx\",\"input\":\"ClientName_input__KXEts\",\"btn\":\"ClientName_btn__fr9E0\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsSlice';\nimport css from './ClientName.module.css';\n\nconst ClientName = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.contacts.isLoading);\n  const allContacts = useSelector((state) => state.contacts.items);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const isNameUnique = (name) => {\n    return !allContacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = formData;\n\n    if (!isLoading && isNameUnique(name)) {\n      dispatch(addContact({ name, number }));\n      setFormData({ name: '', number: '' });\n    } else {\n      alert('Contact with this name already exists.');\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name:</label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          pattern=\"[A-Za-z]{2,15} [A-Za-z]{2,15}\"\n          placeholder=\"Diana Klein\"\n          onChange={handleInputChange}\n          required\n        />\n      \n      <label className={css.label}>\n        Number:</label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={formData.number}\n          pattern=\"\\+?\\d{1,4}?[.\\-\\s]?\\(?\\d{1,3}?\\)?[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,9}\"\n          placeholder=\"777-77-77\"\n          onChange={handleInputChange}\n          required\n        />\n      \n      <button className={css.btn} type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding...' : 'Add Contact'}\n      </button>\n    </form>\n    </div>\n  );\n};\n\nexport default ClientName;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import { Filter } from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactsList/ContactsList';\nimport ClientName from '../../components/ClientName/ClientName';\nimport css from './ContactsPage.module.css'\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.container}>\n      <ClientName />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Filter","dispatch","useDispatch","filter","useSelector","state","_jsxs","className","css","children","_jsx","name","value","onChange","e","updateFilterAction","target","src","search","alt","allContacts","contacts","items","isLoading","toLowerCase","contact","includes","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchContacts","t0","console","error","stop","apply","arguments","Loader","map","number","onClick","deleteContact","id","disabled","_useState","useState","_useState2","_slicedToArray","formData","setFormData","handleInputChange","_objectSpread","_defineProperty","onSubmit","preventDefault","some","isNameUnique","addContact","alert","type","pattern","placeholder","required","ClientName","ContactsList"],"sourceRoot":""}